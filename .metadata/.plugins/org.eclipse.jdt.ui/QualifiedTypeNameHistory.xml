<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="javax.servlet.http.HttpServletRequest"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ExceptionHandler"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="org.springframework.web.servlet.support.ServletUriComponentsBuilder"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.mapping.Document"/>
    <fullyQualifiedTypeName name="com.programar.workshopmongo.domain.User"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.mapping.DBRef"/>
    <fullyQualifiedTypeName name="com.programar.workshopmongo.dto.AuthorDTO"/>
    <fullyQualifiedTypeName name="java.net.URLDecoder"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
    <fullyQualifiedTypeName name="org.springframework.boot.context.properties.bind.DefaultValue"/>
    <fullyQualifiedTypeName name="com.programar.workshopmongo.resources.util.URL"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.repository.Query"/>
    <fullyQualifiedTypeName name="java.text.SimpleDateFormat"/>
    <fullyQualifiedTypeName name="java.util.TimeZone"/>
    <fullyQualifiedTypeName name="java.util.Date"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="javax.persistence.Entity"/>
    <fullyQualifiedTypeName name="javax.persistence.Table"/>
    <fullyQualifiedTypeName name="org.springframework.data.annotation.Id"/>
    <fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
    <fullyQualifiedTypeName name="javax.persistence.GenerationType"/>
    <fullyQualifiedTypeName name="javax.persistence.Id"/>
    <fullyQualifiedTypeName name="com.programar.hrworker.repositories.WorkerRepository"/>
    <fullyQualifiedTypeName name="com.programar.hrworker.entities.Worker"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.hibernate.annotations.Parameter"/>
    <fullyQualifiedTypeName name="java.io.Serializable"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="com.programar.hrpayroll.services.PaymentService"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="com.programar.hrpayroll.entities.Payment"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
    <fullyQualifiedTypeName name="com.programar.hrpayroll.entities.Worker"/>
    <fullyQualifiedTypeName name="com.programar.hrpayroll.feignclients.WorkerFeignClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.ribbon.RibbonClient"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.hibernate.cfg.Environment"/>
    <fullyQualifiedTypeName name="org.springframework.core.env.Environment"/>
    <fullyQualifiedTypeName name="ch.qos.logback.classic.Logger"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="com.sun.org.slf4j.internal.LoggerFactory"/>
    <fullyQualifiedTypeName name="com.programar.hrworker.resources.WorkerResource"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker"/>
    <fullyQualifiedTypeName name="com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.EnableZuulProxy"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
</qualifiedTypeNameHistroy>
