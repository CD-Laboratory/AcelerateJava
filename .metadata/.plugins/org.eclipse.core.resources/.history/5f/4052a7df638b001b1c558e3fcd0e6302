package com.programar.cursoop.services;

import java.util.Date;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.programar.cursoop.domain.ItemPedido;
import com.programar.cursoop.domain.PagamentoComBoleto;
import com.programar.cursoop.domain.Pedido;
import com.programar.cursoop.domain.enums.EstadoPagamento;
import com.programar.cursoop.repositories.ItemPedidoRepository;
import com.programar.cursoop.repositories.PagamentoRepository;
import com.programar.cursoop.repositories.PedidoRepository;
import com.programar.cursoop.services.exceptions.ObjectNotFoundException;


@Service
public class PedidoService {

	@Autowired
	private PedidoRepository rep;
	
	@Autowired
	private BoletoService boletoService;
	
	@Autowired
	private PagamentoRepository pagamentoRepository;

	@Autowired
	private ProdutoService produtoService;
	
	@Autowired
	private ItemPedidoRepository itemPedidoRepository;
	
	// buscar pedido
	public Pedido find(Integer id) {
		// acessa o banco de dados, buscando um pedido pelo id
		Optional<Pedido> obj = rep.findById(id);
		
		//retornando o pedido, com tratamento de excecao para caso o pedido buscado não exista
		return obj.orElseThrow(() -> new ObjectNotFoundException(
				"Objeto não encontrado! Id: " + id + ", Tipo: " + Pedido.class.getName()));
	}
	
	// inserir novo pedido
	@Transactional
	public Pedido insert(Pedido obj) {
		obj.setId(null);
		obj.setInstante(new Date());
		obj.getPagamento().setEstado(EstadoPagamento.PENDENTE);;
		obj.getPagamento().setPedido(obj);
		
		if (obj.getPagamento() instanceof PagamentoComBoleto) {
			PagamentoComBoleto pagto = (PagamentoComBoleto) obj.getPagamento();
			
			boletoService.preencherPagamentoComBoleto(pagto, obj.getInstante());
		}
		
		obj = rep.save(obj);
		
		pagamentoRepository.save(obj.getPagamento());
		
		for (ItemPedido ip : obj.getItens()) {
			ip.setDesconto(0.0);	
			ip.setProduto(produtoService.find(ip.getProduto().getId()));
			ip.setPreco(ip.getProduto().getPreco());
			ip.setPedido(obj);
		}
		
		itemPedidoRepository.saveAll(obj.getItens());
				
		return obj; 
	}
}
